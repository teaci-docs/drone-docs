<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clone on Drone</title>
    <link>http://docs.tea-ci.org/categories/clone/</link>
    <description>Recent content in Clone on Drone</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Feb 2016 08:35:06 +0000</lastBuildDate>
    <atom:link href="http://docs.tea-ci.org/categories/clone/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Trigger</title>
      <link>http://docs.tea-ci.org/plugins/downstream/</link>
      <pubDate>Sun, 21 Feb 2016 08:35:06 +0000</pubDate>
      
      <guid>http://docs.tea-ci.org/plugins/downstream/</guid>
      <description>&lt;p&gt;Use this plugin to trigger builds for a list of downstream repositories. This is useful when updates to a repository have downstream impacts that should also be tested. These are the configuration options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;repositories&lt;/code&gt; - list of repositories to trigger&lt;/li&gt;
&lt;li&gt;&lt;code&gt;token&lt;/code&gt; - drone API token from your user setttings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following is a sample configuration in your .drone.yml file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;notify:
  downstream:
    repositories:
      - octocat/Hello-World
      - octocat/Spoon-Knife
    token: e3b0c44298fc1c149afbf4
    when:
      event: push
      branch: master
      success: true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In some cases you may want to trigger specific branches:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;notify:
  downstream:
    repositories:
      - octocat/Hello-World@develop
      - octocat/Spoon-Knife@master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Please be sure to include the &lt;code&gt;when&lt;/code&gt; section in your &lt;code&gt;.drone.yml&lt;/code&gt; to avoid triggering builds for pull requests, tags and failed builds.&lt;/p&gt;

&lt;p&gt;You can also trigger a new build for a repository using &lt;code&gt;fork: true&lt;/code&gt; :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;notify:
  downstream:
    repositories:
      - octocat/Hello-World
      - octocat/Spoon-Knife
    token: e3b0c44298fc1c149afbf4
    fork: true
    when:
      event: push
      branch: master
      success: true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to trigger a drone build on a custom server, you can use the &lt;code&gt;server&lt;/code&gt; argument. Do not forget to include the protocol for it to work.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;notify:
  downstream:
    repositories:
      - octocat/Hello-World
      - octocat/Spoon-Knife
    token: e3b0c44298fc1c149afbf4
    fork: true
    server: https://ci.exmaple.com
    when:
      event: push
      branch: master
      success: true
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Mercurial</title>
      <link>http://docs.tea-ci.org/plugins/hg/</link>
      <pubDate>Sat, 13 Feb 2016 08:58:26 +0000</pubDate>
      
      <guid>http://docs.tea-ci.org/plugins/hg/</guid>
      <description>&lt;p&gt;Use the Mercurial plugin to clone a mercurial repository. Note that Drone uses this plugin
by default for all Bitbucket mercurial repositories, without any configuration required. You can override
the default configuration with the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; relative path inside /drone/src where the repository is cloned&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following is a sample Git clone configuration in your .drone.yml file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;clone:
  image: hg
  path: bitbucket.org/foo/bar
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>http://docs.tea-ci.org/plugins/git/</link>
      <pubDate>Sat, 13 Feb 2016 08:58:07 +0000</pubDate>
      
      <guid>http://docs.tea-ci.org/plugins/git/</guid>
      <description>

&lt;p&gt;Use the Git plugin to clone a git repository. Note that Drone uses the Git plugin
by default for all repositories, without any configuration required. You can override
the default configuration with the following parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;depth&lt;/code&gt; - creates a shallow clone with truncated history&lt;/li&gt;
&lt;li&gt;&lt;code&gt;recursive&lt;/code&gt; - recursively clones git submodules&lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt; - relative path inside &lt;code&gt;/drone/src&lt;/code&gt; where the repository is cloned&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skip_verify&lt;/code&gt; - disables ssl verification when set to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tags&lt;/code&gt; - fetches tags when set to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;submodule_override&lt;/code&gt; - override submodule urls&lt;/li&gt;
&lt;li&gt;&lt;code&gt;submodule_update_remote&lt;/code&gt; - pass the &lt;code&gt;--remote&lt;/code&gt; flag to git submodule update (useful when tracking a branch instead of a commit in a submodule)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;clone:
  depth: 50
  recursive: false
  tags: false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sample configuration to override the relative clone path:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# clones to /drone/src/foo/bar

clone:
  path: foo/bar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sample configuration to clone submodules:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;clone:
  recursive: true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;private-submodules:1c1ef82aae62aeea8eedcb5f455b129b&#34;&gt;Private Submodules&lt;/h2&gt;

&lt;p&gt;Private submodules may encounter the following error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Warning: Permanently added &#39;github.com,192.30.252.130&#39; (RSA) to the list of known hosts.
ERROR: Repository not found.
fatal: Could not read from remote repository.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This happens when a private submodule uses a &lt;code&gt;git+ssh&lt;/code&gt; url:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[submodule &amp;quot;hello-world&amp;quot;]
    path = hello-world
    url = git@github.com:octocat/hello-world.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This can be mitigated by overriding the submodule url to use &lt;code&gt;git+https&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;clone:
  recursive: true
  submodule_override:
    hello-world: https://github.com/octocat/hello-world.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Overriding the submodule url to force &lt;code&gt;git+https&lt;/code&gt; allows us to take advantage of the &lt;code&gt;netrc&lt;/code&gt; file and automatically authenticate to the submodule repository.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>