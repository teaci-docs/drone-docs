<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google on Drone</title>
    <link>http://docs.tea-ci.org/tags/google/</link>
    <description>Recent content in Google on Drone</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Feb 2016 08:59:33 +0000</lastBuildDate>
    <atom:link href="http://docs.tea-ci.org/tags/google/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Google Container Registry</title>
      <link>http://docs.tea-ci.org/plugins/gcr/</link>
      <pubDate>Sat, 13 Feb 2016 08:59:33 +0000</pubDate>
      
      <guid>http://docs.tea-ci.org/plugins/gcr/</guid>
      <description>

&lt;p&gt;Use this plugin to build and push Docker images to the Google Container Registry (GCR). Please read the GCR &lt;a href=&#34;https://cloud.google.com/container-registry/&#34;&gt;documentation&lt;/a&gt; before you begin. You will need to generate a &lt;a href=&#34;https://developers.google.com/console/help/new/#serviceaccounts&#34;&gt;JSON token&lt;/a&gt; to authenticate to the registry and push images.&lt;/p&gt;

&lt;p&gt;The following parameters are used to configure this plugin:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;registry&lt;/code&gt; - authenticates to this registry (defaults to &lt;code&gt;gcr.io&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;token&lt;/code&gt; - json token&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repo&lt;/code&gt; - repository name for the image&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tag&lt;/code&gt; - repository tag for the image (defaults to &lt;code&gt;latest&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage_driver&lt;/code&gt; - use &lt;code&gt;aufs&lt;/code&gt;, &lt;code&gt;devicemapper&lt;/code&gt;, &lt;code&gt;btrfs&lt;/code&gt; or &lt;code&gt;overlay&lt;/code&gt; driver&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;publish:
  gcr:
    repo: foo/bar
    token: &amp;gt;
      {
        &amp;quot;private_key_id&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;private_key&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;client_email&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;client_id&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;type&amp;quot;: &amp;quot;...&amp;quot;
      }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sample configuration using multiple tags:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;publish:
  gcr:
    repo: foo/bar
    tag:
      - latest
      - &amp;quot;1.0.1&amp;quot;
      - &amp;quot;1.0&amp;quot;
    token: &amp;gt;
      {
        &amp;quot;private_key_id&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;private_key&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;client_email&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;client_id&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;type&amp;quot;: &amp;quot;...&amp;quot;
      }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;json-token:e36943907c8530760d5268ab204f3440&#34;&gt;JSON Token&lt;/h2&gt;

&lt;p&gt;When setting your token in the &lt;code&gt;.drone.yml&lt;/code&gt; file you must use &lt;a href=&#34;http://www.yaml.org/spec/1.2/spec.html#id2796251&#34;&gt;folded block scalars&lt;/a&gt; to avoid parsing errors:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;publish:
  gcr:
    token: &amp;gt;
      {
        &amp;quot;private_key_id&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;private_key&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;client_email&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;client_id&amp;quot;: &amp;quot;...&amp;quot;,
        &amp;quot;type&amp;quot;: &amp;quot;...&amp;quot;
      }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When injecting secrets you must also use a folded block scalar:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;publish:
  gcr:
    token: &amp;gt;
      $$GOOGLE_KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When defining secrets in a &lt;code&gt;.drone.sec&lt;/code&gt; file you must also use folded block scalars. Please note that you should either place your JSON string on a single line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;environment:
  GOOGLE_KEY: &amp;gt;
    { &amp;quot;private_key_id&amp;quot;: &amp;quot;...&amp;quot;, &amp;quot;private_key&amp;quot;: &amp;quot;...&amp;quot; ... }

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or you must ensure all lines have the exact same indentation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;environment:
  GOOGLE_KEY: &amp;gt;
    {
    &amp;quot;private_key_id&amp;quot;: &amp;quot;...&amp;quot;,
    &amp;quot;private_key&amp;quot;: &amp;quot;...&amp;quot;,
    &amp;quot;client_email&amp;quot;: &amp;quot;...&amp;quot;,
    &amp;quot;client_id&amp;quot;: &amp;quot;...&amp;quot;,
    &amp;quot;type&amp;quot;: &amp;quot;...&amp;quot;
    }

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;troubleshooting:e36943907c8530760d5268ab204f3440&#34;&gt;Troubleshooting&lt;/h2&gt;

&lt;p&gt;For detailed output you can set the &lt;code&gt;DOCKER_LAUNCH_DEBUG&lt;/code&gt; environment variable in your plugin configuration. This starts Docker with verbose logging enabled.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;publish:
  gcr:
    environment:
      - DOCKER_LAUNCH_DEBUG=true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;known-issues:e36943907c8530760d5268ab204f3440&#34;&gt;Known Issues&lt;/h2&gt;

&lt;p&gt;There are known issues when attempting to run this plugin on CentOS, RedHat, and Linux installations that do not have a supported storage driver installed. You can check by running &lt;code&gt;docker info | grep &#39;Storage Driver:&#39;&lt;/code&gt; on your host machine. If the storage driver is not &lt;code&gt;aufs&lt;/code&gt; or &lt;code&gt;overlay&lt;/code&gt; you will need to re-configure your host machine.&lt;/p&gt;

&lt;p&gt;This error occurs when trying to use the default &lt;code&gt;aufs&lt;/code&gt; storage Driver but aufs is not installed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;level=fatal msg=&amp;quot;Error starting daemon: error initializing graphdriver: driver not supported
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This error occurs when trying to use the &lt;code&gt;overlay&lt;/code&gt; storage Driver but overlay is not installed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;level=error msg=&amp;quot;&#39;overlay&#39; not found as a supported filesystem on this host.
Please ensure kernel is new enough and has overlay support loaded.&amp;quot; 
level=fatal msg=&amp;quot;Error starting daemon: error initializing graphdriver: driver not supported&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This error occurs when using CentOS or RedHat which default to the &lt;code&gt;devicemapper&lt;/code&gt; storage driver:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;level=error msg=&amp;quot;There are no more loopback devices available.&amp;quot; 
level=fatal msg=&amp;quot;Error starting daemon: error initializing graphdriver: loopback mounting failed&amp;quot; 
Cannot connect to the Docker daemon. Is &#39;docker -d&#39; running on this host?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above issue can be resolved by setting &lt;code&gt;storage_driver: vfs&lt;/code&gt; in the &lt;code&gt;.drone.yml&lt;/code&gt; file. This may work, but will have very poor performance as discussed &lt;a href=&#34;https://github.com/rancher/docker-from-scratch/issues/20&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>