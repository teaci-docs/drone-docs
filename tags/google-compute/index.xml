<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Compute on Drone</title>
    <link>http://docs.tea-ci.org/tags/google-compute/</link>
    <description>Recent content in Google Compute on Drone</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Feb 2016 09:00:21 +0000</lastBuildDate>
    <atom:link href="http://docs.tea-ci.org/tags/google-compute/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Google Cloud Storage</title>
      <link>http://docs.tea-ci.org/plugins/google_cloudstorage/</link>
      <pubDate>Sat, 13 Feb 2016 09:00:21 +0000</pubDate>
      
      <guid>http://docs.tea-ci.org/plugins/google_cloudstorage/</guid>
      <description>&lt;p&gt;Use this plugin to upload files and build artifacts
to the &lt;a href=&#34;https://cloud.google.com/storage/&#34;&gt;Google Cloud Storage (GCS)&lt;/a&gt; bucket.&lt;/p&gt;

&lt;p&gt;You will need to a &lt;a href=&#34;https://developers.google.com/console/help/new/#serviceaccounts&#34;&gt;Service Account&lt;/a&gt;
to authenticate to the GCS.&lt;/p&gt;

&lt;p&gt;The following parameters are used to configure this plugin:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;auth_key&lt;/code&gt; - service account auth key&lt;/li&gt;
&lt;li&gt;&lt;code&gt;source&lt;/code&gt; - location of files to upload&lt;/li&gt;
&lt;li&gt;&lt;code&gt;target&lt;/code&gt; - destination to copy files to, including bucket name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ignore&lt;/code&gt; - skip files matching this &lt;a href=&#34;https://golang.org/pkg/path/filepath/#Match&#34;&gt;pattern&lt;/a&gt;, relative to &lt;code&gt;source&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;acl&lt;/code&gt; - a list of access rules applied to the uploaded files, in a form of &lt;code&gt;entity:role&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gzip&lt;/code&gt; - files with the specified extensions will be gzipped and uploaded with &amp;ldquo;gzip&amp;rdquo; Content-Encoding header&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cache_control&lt;/code&gt; - Cache-Control header&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metadata&lt;/code&gt; - an arbitrary dictionary with custom metadata applied to all objects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following is a sample configuration in your .drone.yml file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;publish:
  gcs:
    auth_key: &amp;gt;
      $SERVICE_ACCOUNT_KEY
    source: dist
    target: bucket/dir/
    ignore: bin/*
    acl:
      - allUsers:READER
    gzip:
      - js
      - css
      - html
    cache_control: public,max-age=3600
    metadata:
      x-goog-meta-foo: bar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;SERVICE_ACCOUNT_KEY&lt;/code&gt; would be defined in .drone.sec (before encryption):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;checksum: ...
environment:
  SERVICE_ACCOUNT_KEY: &amp;gt;
    {
    &amp;quot;private_key&amp;quot;: &amp;quot;-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n&amp;quot;,
    &amp;quot;client_email&amp;quot;: &amp;quot;test@gserviceaccount.com&amp;quot;,
    &amp;quot;client_id&amp;quot;: &amp;quot;12487645876234765&amp;quot;,
    &amp;quot;auth_uri&amp;quot;: &amp;quot;https://accounts.google.com/o/oauth2/auth&amp;quot;,
    &amp;quot;token_uri&amp;quot;: &amp;quot;https://accounts.google.com/o/oauth2/token&amp;quot;,
    }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>